<project name="GPIG-C Emitter Launcher" basedir="." default="rebuild-run">

    <!--  Determine platform directory name -->
    
	<condition property="lib.platform.name" value="win">
		<os family="windows" />
	</condition>

	<condition property="lib.platform.name" value="osx">
		<os family="mac" />
	</condition>

	<condition property="lib.platform.name" value="linux">
		<and>
			<not>
				<isset property="lib.platform.dir" />
			</not>
			<os family="unix" />
		</and>
	</condition>
	
	<!--  Determine bitness of architecture -->

	<condition property="lib.platform.arch" value="64" else="32">
		<contains string="${os.arch}" substring="64" />
	</condition>

	<!-- OSX requires a special arg to be passed to the JVM -->
	
	<condition property="jvmarg">
		<equals arg1="${lib.platform.name}" arg2="osx" />
	</condition>
	
	<fail message="Only OSX 64-bit, Linux 64-bit, and Windows 32- or 64-bit supported atm" unless="lib.platform.name" />
	
	<!-- Various directories -->

	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="build.dir" value="bin" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/jar" />
	<property name="res.dir" value="res" />
	<property name="tools.dir" value="../../tools" />
	
	<!--  Various filenames -->
	
	<property name="jar.name" value="EmitterLauncher.jar" />
	
	<!--  Manifest properties -->

	<property name="main-class" value="uk.co.gpigc.emitterlauncher.EmitterShell" />
	
	<path id="classpath">
		<fileset dir="${lib.dir}" includes="*.jar" />
		<fileset dir="${lib.dir}/${lib.platform.name}-${lib.platform.arch}"
			includes="*.jar" />
	</path>
	
	<!-- Initialise One-Jar -->

	<property name="one-jar.dist.dir" value="../../tools/one-jar" />
	<import file="${one-jar.dist.dir}/one-jar-ant-task.xml" />


	<!-- TARGETS -->
	
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>
	
	<target name="collect-emitters">
	    <mkdir dir="bin/emitters" />
	    <copy file="../TestApp1Emitter/bin/jar/TestApp1Emitter.jar" todir="bin/emitters" />
	    <copy file="../TestApp2Emitter/bin/jar/TestApp2Emitter.jar" todir="bin/emitters" />
	    <copy file="../ResponseTimeEmitter/bin/jar/ResponseTimeEmitter.jar" todir="bin/emitters" />
	    <copy file="../EarthquakeEmitter/bin/jar/EarthquakeEmitter.jar" todir="bin/emitters" />
	    <copy file="../TrafficEmitter/bin/jar/TrafficEmitter.jar" todir="bin/emitters" />
	</target>

	<target name="compile" depends="collect-emitters">
		<mkdir dir="${classes.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}"
			classpathref="classpath" />
	</target>

	<target name="jar" depends="compile">
		<mkdir dir="${jar.dir}" />
		<one-jar destfile="${jar.dir}/${jar.name}">
			<manifest>
				<attribute name="One-Jar-Main-Class" value="${main-class}" />
				<attribute name="One-Jar-Expand" value="${res.dir}" />
			</manifest>
			<main>
				<fileset dir="${classes.dir}" />
			</main>
			<lib>
				<fileset dir="${lib.dir}" includes="*.jar" />
				<fileset dir="${lib.dir}/${lib.platform.name}-${lib.platform.arch}"
					includes="*.jar" />
			</lib>
			<fileset dir="." includes="${res.dir}/**" />
		</one-jar>
	</target>

	<target name="runarg" depends="jar" if="jvmarg">
	    <!-- This executes on OSX -->
		<java fork="true" jar="${jar.dir}/${jar.name}">
			<jvmarg value="-XstartOnFirstThread" />
			<arg value="./bin/emitters" />
		</java>
	</target>

	<target name="run" depends="jar" unless="jvmarg">
	    <!-- This executes on anything but OSX -->
		<java fork="true" jar="${jar.dir}/${jar.name}">
			<arg value="../../bin/emitters" />
		</java>
	</target>

	<target name="rebuild" depends="clean,jar" />

	<target name="rebuild-run" depends="clean,runarg,run" />

</project>